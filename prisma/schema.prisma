// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String   
  username        String   @unique
  email           String   @unique
  password        String?  
  profilePicture  String?  
  bio             String   @default("Update bio...")     
  gender          String?     
  authProviderId  String?     
  followersCount  Int      @default(0) 
  followingCount  Int      @default(0) 
  postsCount      Int      @default(0) 
  posts           Post[]   
  saved           Saved[]   
  tagged          Tagged[]  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
}

model Saved{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @unique @db.ObjectId   
}

model Tagged{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @unique @db.ObjectId   
}

// model UserFol{
//   id              String   @id @default(auto()) @map("_id") @db.ObjectId
//   user            User     @relation(fields: [userId], references: [id])
//   userId          String   @unique @db.ObjectId   
// }


model Post{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @unique @db.ObjectId   
}


